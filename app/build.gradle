apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'

def buildTime() {
    return new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))
}

def versionMajor = 1
def versionMinor = 0
def versionPatch = 7
def versionBuild = 0 // bump for dogfood builds, public betas, etc.



Properties properties = new Properties()
// local.properties file in the root director
def f = project.rootProject.file('local.properties')
if (f.exists()){
    properties.load(f.newDataInputStream())
}

def isCi = "true".equals(System.getenv("CI"))
def preDexEnabled = "true".equals(System.getProperty("pre-dex", "true"))

def keyStorePassWord = null
def keyPassWord = null

if (isCi){
    keyStorePassWord = System.getenv('KEYSTORE_PASSWORD')
    keyPassWord = System.getenv('KEY_PASSWORD')
}else{
    keyStorePassWord = properties.getProperty('KEYSTORE_PASSWORD')
    keyPassWord = properties.getProperty('KEY_PASSWORD')
}


android {
    signingConfigs {
        SigningConfig {
            keyAlias 'TesterHome'
            storeFile file('keystore.jks')
            storePassword keyStorePassWord
            keyPassword keyPassWord
        }
    }
    compileSdkVersion 24
    buildToolsVersion "23.0.3"
    defaultConfig {
        applicationId "com.testerhome.nativeandroid"
        minSdkVersion 16
        targetSdkVersion 24
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        buildConfigField "String", "BUILD_TIME", "\"${buildTime()}\""

//        jackOptions {
//            enabled true
//        }
    }
    buildTypes {
        release {
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (keyPassWord == null || keyStorePassWord == null){
                println 'can not find KEYSTORE_PASSWORD or KEY_PASSWORD in local.properties'
            }else {
                minifyEnabled true
                signingConfig signingConfigs.SigningConfig
            }
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        incremental true
        maxProcessCount 4
        javaMaxHeapSize "2g"
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !isCi
    }

}
retrolambda {
    jvmArgs '-noverify'
}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:design:24.0.0'
    compile 'com.android.support:recyclerview-v7:24.0.0'
    compile 'com.android.support:customtabs:24.0.0'

    compile 'com.jakewharton:butterknife:8.0.1'
    apt 'com.jakewharton:butterknife-compiler:8.0.1'

    compile 'com.facebook.fresco:fresco:0.10.0'
    compile 'com.facebook.fresco:imagepipeline-okhttp3:0.10.0'

    compile 'com.umeng.analytics:analytics:5.6.1'
    compile 'com.squareup.okhttp3:okhttp:3.2.0'

    compile 'com.squareup.retrofit2:retrofit:2.0.2'
    compile 'com.squareup.retrofit2:converter-gson:2.0.2'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.2'
    // RxJava itself
    compile 'io.reactivex:rxjava:1.1.5'
    // And ProGuard rules for RxJava!
    compile 'com.artemzin.rxjava:proguard-rules:1.1.5.0'
    compile 'io.reactivex:rxandroid:1.2.0'
    compile 'com.google.code.gson:gson:2.6.2'
    compile 'zhou.widget:richtext:1.0.4'
    compile 'org.tautua.markdownpapers:markdownpapers-core:1.4.2'

    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'

    compile 'org.greenrobot:greendao:2.2.0'
    compile 'com.facebook.stetho:stetho:1.3.1'
    compile 'com.facebook.stetho:stetho-okhttp3:1.3.1'
    compile 'com.google.android.gms:play-services-analytics:9.2.1'
    compile project(':swipebackhelper')
    compile 'com.tonicartos:superslim:0.4.13'
}

apply plugin: 'com.google.gms.google-services'
